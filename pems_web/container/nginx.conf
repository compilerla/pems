worker_processes auto;
error_log stderr warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
  accept_mutex on;
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  gzip on;
  keepalive_timeout 5;

  log_format main '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent" "$gzip_ratio"';

  access_log /dev/stdout main;

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    server unix:/caltrans/run/gunicorn.sock fail_timeout=0;
  }

  server {
    listen 8000;

    keepalive_timeout 65;

    # 404 known scraping path targets
    # case-insensitive regex matches the given path fragment anywhere in the request path
    location ~* /(\.?git|api|app|assets|ats|bootstrap|bower|cgi|content|cpanel|credentials|debug|docker|doc|env|example|jenkins|robots|swagger|web|yq) {
        access_log off;
        log_not_found off;
        return 404;
    }

    # 404 known scraping file targets
    # case-insensitive regex matches the given file extension anywhere in the request path
    location ~* /.*\.(ash|asp|axd|cgi|com|db|env|json|php|ping|sqlite|xml|ya?ml) {
        access_log off;
        log_not_found off;
        return 404;
    }

    location /favicon.ico {
      access_log off;
      log_not_found off;
      expires 1y;
      add_header Cache-Control public;
    }

    # path for static files
    location /static/ {
      alias /caltrans/app/static/;
      expires 1y;
      add_header Cache-Control public;
    }

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    # app path
    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }
  }
}
