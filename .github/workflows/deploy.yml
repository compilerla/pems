name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      # pre-release tag
      - "202[4-9].[0-9][0-9].[0-9]+-rc[0-9]+"
      # release tags
      - "202[4-9].[0-9][0-9].[0-9]+"

defaults:
  run:
    shell: bash

concurrency:
  # this ternary operator-like expression gives us the name of the deployment environment (see https://docs.github.com/en/actions/learn-github-actions/expressions#example)
  # and ensures that only one deployment per environment is in progress at a time
  group: ${{ github.ref_type != 'tag' && 'dev' || contains(github.ref, '-rc') && 'test' || 'prod' }}
  cancel-in-progress: true

jobs:
  tests-ui:
    uses: ./.github/workflows/tests-ui.yml

  tests-pytest:
    uses: ./.github/workflows/tests-pytest.yml
    permissions:
      pull-requests: write
      contents: write

  deploy:
    runs-on: ubuntu-latest
    needs: [tests-ui, tests-pytest]
    environment: ${{ github.ref_type != 'tag' && 'dev' || contains(github.ref, '-rc') && 'test' || 'prod' }}
    permissions:
      packages: write
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version-file: .github/workflows/.python-version
          cache: pip
          cache-dependency-path: "**/pyproject.toml"

      - name: Write python packages to file
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install pipdeptree
          pip install -e .
          mkdir -p pems/static
          pipdeptree
          pipdeptree >> pems/static/requirements.txt

      - name: Write commit SHA to file
        run: echo "${{ github.sha }}" >> pems/static/sha.txt

      - name: Write tag to file
        run: echo "${{ github.ref_name }}" >> pems/static/version.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update GitHub connection-related AWS resources
        run: |
          aws cloudformation update-stack \
          --stack-name pems-github-actions
          --template-body file://infra/cloudformation/gh_actions.yaml \
          --capabilities CAPABILITY_IAM

      - name: Install AWS Copilot CLI
        run: |
          mkdir -p ./.tools
          curl -Lo ./.tools/copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux
          chmod +x ./.tools/copilot
          sudo mv ./.tools/copilot /usr/local/bin/copilot

      - name: Deploy web Service
        run: copilot deploy --name web --env ${{ github.environment }}
        working-directory: ./infra

      - name: Deploy streamlit Service
        run: copilot deploy --name streamlit --env ${{ github.environment }}
        working-directory: ./infra

  release:
    needs: deploy
    if: ${{ github.ref_type == 'tag' && !contains(github.ref, '-rc') }}
    runs-on: ubuntu-latest
    permissions:
      # https://github.com/softprops/action-gh-release#permissions
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          generate_release_notes: true
